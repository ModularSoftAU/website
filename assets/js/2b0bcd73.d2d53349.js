"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9006],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=o,h=c["".concat(p,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(h,r(r({ref:t},s),{},{components:n})):a.createElement(h,r({ref:t},s))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,r=new Array(i);r[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:o,r[1]=l;for(var d=2;d<i;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9315:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=n(7462),o=(n(7294),n(3905));const i={title:"Docs Documentation",description:"Contributing to the documentation",sidebar_label:"Docs Documentation",sidebar_position:2},r=void 0,l={unversionedId:"contributing/documentation",id:"contributing/documentation",title:"Docs Documentation",description:"Contributing to the documentation",source:"@site/docs/contributing/documentation.md",sourceDirName:"contributing",slug:"/contributing/documentation",permalink:"/docs/contributing/documentation",draft:!1,editUrl:"https://github.com/ModularSoftAU/website/tree/main/packages/create-docusaurus/templates/shared/docs/contributing/documentation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Docs Documentation",description:"Contributing to the documentation",sidebar_label:"Docs Documentation",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Discord",permalink:"/docs/products/zander/features/discord"},next:{title:"Conventions",permalink:"/docs/contributing/zander/apiConventions"}},p={},d=[{value:"Documentation Installation",id:"documentation-installation",level:2},{value:"Compiling the Documentation",id:"compiling-the-documentation",level:2},{value:"Contributing to the API Documentation",id:"contributing-to-the-api-documentation",level:2},{value:"Understanding the API Template",id:"understanding-the-api-template",level:3},{value:"Adding a page",id:"adding-a-page",level:3},{value:"Adding a footer",id:"adding-a-footer",level:3},{value:"Live editing",id:"live-editing",level:2}],s={toc:d},c="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Contributing to the documentation is readily encouraged. Feel free to submit a pull request if you feel you can add to the documentation."),(0,o.kt)("h2",{id:"documentation-installation"},"Documentation Installation"),(0,o.kt)("p",null,"To compile the documentation you will need ",(0,o.kt)("a",{parentName:"p",href:"https://nodejs.org/en/"},"Node.js")," and ",(0,o.kt)("a",{parentName:"p",href:"https://www.python.org/"},"Python3"),". With Node.js installed you should be able to run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm --version\n")),(0,o.kt)("p",null,"You can also check to see if Python is installed with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python --version\n")),(0,o.kt)("p",null,"(Optionally): Start a python virtual environment."),(0,o.kt)("p",null,"You will then need to install the yaml parser with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"python -m pip install -r requirements.txt\n")),(0,o.kt)("h2",{id:"compiling-the-documentation"},"Compiling the Documentation"),(0,o.kt)("p",null,"Open a terminal and run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd vendor\npython APIGenerator/src/gen.py --build\n")),(0,o.kt)("p",null,"This will build the documentation to the directory ",(0,o.kt)("inlineCode",{parentName:"p"},"docs"),"."),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Any local API documentation modification in the ",(0,o.kt)("inlineCode",{parentName:"p"},"docs")," directory will be overwritten whenever a build takes place. To edit the footers edit the files in ",(0,o.kt)("inlineCode",{parentName:"p"},"api"),", or modify ",(0,o.kt)("inlineCode",{parentName:"p"},"docs.yaml")," directly.")),(0,o.kt)("p",null,"Then run the following to install all of the nodejs packages required for the documentation platform:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm i\n")),(0,o.kt)("p",null,"Then run the following to start the documentation platform:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm start\n")),(0,o.kt)("p",null,"This will start Docusaurus at ",(0,o.kt)("a",{parentName:"p",href:"localhost:3000"},(0,o.kt)("inlineCode",{parentName:"a"},"localhost:3000"))," where you can navigate your changes locally."),(0,o.kt)("h2",{id:"contributing-to-the-api-documentation"},"Contributing to the API Documentation"),(0,o.kt)("p",null,"The API documentation is unique because most of each page is built dynamically using ",(0,o.kt)("inlineCode",{parentName:"p"},"gen.py"),". To edit one of the endpoints key information open ",(0,o.kt)("inlineCode",{parentName:"p"},"vendor/docs.yaml")," and navigate to the endpoint you wish to edit. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"# ...\ndiscord:\n  sidebar: Discord\n  files:\n  - join.mdx:\n      route: discord/join\n      method: POST\n      privileged: true\n      short: Log user joining\n      description: Log a message to a Discord channel when user joins the Network.\n      parameters:\n        username:\n          type: string\n          info: Users IGN.\n          optional: false\n# ...\n")),(0,o.kt)("p",null,"You can see how this is rendered by looking at\n",(0,o.kt)("a",{parentName:"p",href:"/docs/products/zander/api/discord/join"},"discord/join")),(0,o.kt)("h3",{id:"understanding-the-api-template"},"Understanding the API Template"),(0,o.kt)("p",null,"The API template can be found at ",(0,o.kt)("inlineCode",{parentName:"p"},"api/template.mdx"),". This file outlines how ",(0,o.kt)("inlineCode",{parentName:"p"},"gen.py")," will generate each API page from the data contained in ",(0,o.kt)("inlineCode",{parentName:"p"},"docs.yaml"),". Variables with parentheses ",(0,o.kt)("inlineCode",{parentName:"p"},"(VAR)")," perform a simple replace. Variables with opening parentheses ",(0,o.kt)("inlineCode",{parentName:"p"},"(VAR)")," and closing arentheses ",(0,o.kt)("inlineCode",{parentName:"p"},"(/VAR)")," can be included based on a condition. These substitutions are performed in ",(0,o.kt)("inlineCode",{parentName:"p"},"generate_file")," in ",(0,o.kt)("inlineCode",{parentName:"p"},"gen.py"),". Example:"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"example_template.mdx")),(0,o.kt)("pre",{parentName:"blockquote"},(0,o.kt)("code",{parentName:"pre",className:"language-md"},"My name is (NAME).\n\n(HOBBIES)\n- I like (GAME)\n(/HOBBIES)\n\n(SECRETS)\n- I like pineapple on pizza\n(/SECRETS)\n")),(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"generate_file()")),(0,o.kt)("pre",{parentName:"blockquote"},(0,o.kt)("code",{parentName:"pre",className:"language-python"},'template.replace("NAME", "shadowolfyt")\ntemplate.replace("GAME", "Minecraft")\ntemplate.remove_line_with_if("HOBBIES", False)\ntemplate.remove_line_with_if("SECRETS", True)\n')),(0,o.kt)("p",{parentName:"blockquote"},"Final page"),(0,o.kt)("pre",{parentName:"blockquote"},(0,o.kt)("code",{parentName:"pre",className:"language-md"},"My name is shadowolfyt.\n\n- I like Minecraft\n\n"))),(0,o.kt)("h3",{id:"adding-a-page"},"Adding a page"),(0,o.kt)("p",null,"To add a page, simply create a new endpoint in ",(0,o.kt)("inlineCode",{parentName:"p"},"docs.yaml")," under the section you desire. See the documentation at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ModularSoftAU/APIGenerator"},"https://github.com/ModularSoftAU/APIGenerator")," for more information about the format of ",(0,o.kt)("inlineCode",{parentName:"p"},"docs.yaml")," and the config."),(0,o.kt)("admonition",{title:"Types",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"Endpoints have some values type checked in ",(0,o.kt)("inlineCode",{parentName:"p"},"gen.py"),". For example, valid methods\nmust be ",(0,o.kt)("inlineCode",{parentName:"p"},"POST")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"GET")," and valid parameter types must be ",(0,o.kt)("inlineCode",{parentName:"p"},"string"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"boolean"),",\nor ",(0,o.kt)("inlineCode",{parentName:"p"},"integer"),".")),(0,o.kt)("h3",{id:"adding-a-footer"},"Adding a footer"),(0,o.kt)("p",null,"Endpoints can include a footer that includes typical usage examples and any edge cases. These footers are spliced onto the end of the template in ",(0,o.kt)("inlineCode",{parentName:"p"},"gen.py"),". Footers are found in the ",(0,o.kt)("inlineCode",{parentName:"p"},"api")," directory. The file structure here is identical to the file structure made in ",(0,o.kt)("inlineCode",{parentName:"p"},"docs.yaml")," (again see docs for more info)."),(0,o.kt)("h2",{id:"live-editing"},"Live editing"),(0,o.kt)("p",null,"Whenever you make a change to a footer, you will have to re-run ",(0,o.kt)("inlineCode",{parentName:"p"},"gen.py")," to see the changes on the website. This can get annoying."),(0,o.kt)("p",null,"To alleviate this, ",(0,o.kt)("inlineCode",{parentName:"p"},"gen.py")," supports live editing mode. To start live editing\nmode run:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd vendor\npython APIGenerator/src/gen.py --live\n")),(0,o.kt)("p",null,"This will start ",(0,o.kt)("inlineCode",{parentName:"p"},"gen.py"),". It will then poll the template directory and immediately rebuild the api if a change occurs."),(0,o.kt)("p",null,"To end live coding mode simple press ",(0,o.kt)("inlineCode",{parentName:"p"},"CTRL+C")," on your keyboard."))}u.isMDXComponent=!0}}]);