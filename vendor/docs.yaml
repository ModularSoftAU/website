---
announcement:
  sidebar: Announcements
  files:
  - get.mdx:
      route: announcement/get
      method: GET
      privileged: true
      short: Get Announcements
      description: Get all announcements.
      parameters:
        announcementId:
          type: integer
          info: Unique identifier for a specific announcement.
          optional: true
        announcementType:
          type: string
          info: Type of announcement (web, tip, motd).
          optional: true
        enabled:
          type: boolean
          info: Filter announcements by enabled visible status.
          optional: false
  - create.mdx:
      route: announcement/create
      method: POST
      privileged: true
      short: Create announcement
      description: Create an announcement on Network platforms.
      parameters:
        actioningUser:
          type: string
          info: User initiating the action.
          optional: false
         enabled:
          type: boolean
          info: 1 if the announcement is enabled, 0 if disabled.
          optional: false
        announcementType:
          type: string
          info: Type of announcement (web, tip, motd).
          optional: false
        colourMessageFormat:
          type: string
          info: Color format for the message (used for motd).
          optional: true
        link:
          type: string
          info: Link associated with the announcement (used for tip and web)
          optional: true
  - edit.mdx:
      route: announcement/edit
      method: POST
      privileged: true
      short: Edit announcement
      description: Edit an existing announcement on Network platforms.
      parameters:
        actioningUser:
          type: string
          info: User initiating the action.
          optional: false
        announcementId:
          type: integer
          info: Unique identifier for a specific announcement.
          optional: true
        enabled:
          type: boolean
          info: 1 if the announcement is enabled, 0 if disabled.
          optional: true
        announcementType:
          type: string
          info: Type of announcement (web, tip, motd).
          optional: true
        body:
          type: string
          info: Updated content of the announcement.
          optional: true
        colourMessageFormat:
          type: string
          info: Updated color format for the message.
          optional: true
        link:
          type: string
          info: Updated link associated with the announcement.
          optional: true
  - delete.mdx:
      route: announcement/delete
      method: POST
      privileged: true
      short: Delete announcement
      description: Delete an existing announcement on Network platforms.
      parameters:
        announcementId:
          type: integer
          info: Unique identifier for a specific announcement.
          optional: false
application:
  sidebar: Applications
  files:
  - get.mdx:
      route: application/get
      method: GET
      privileged: true
      short: Get applications
      description: Get a list of all the application forms.
      parameters:
        id:
          type: integer
          info: The id of the application to view.
          optional: true
  - create.mdx:
      route: application/create
      method: POST
      privileged: true
      short: Create application
      description: Create an application for users to apply for.
      parameters:
        actioningUser:
          type: string
          info: User initiating the action.
          optional: false
        displayName:
          type: string
          info: The display name for the application.
          optional: false
        description:
          type: string
          info: A short blurb of the application.
          optional: false
        displayIcon:
          type: string
          info: The icon to display from FontAwesome.
          optional: false
        requirementsMarkdown:
          type: string
          info: A link to a markdown file that renders the requirements for the role.
          optional: false
        redirectUrl:
          type: string
          info: The external URL to link the user to to complete commence the application process.
          optional: false
        position:
          type: integer
          info: Which position should this application sit on the page
          optional: false
        applicationStatus:
          type: integer
          info: Whether the application is Open or Closed.
          optional: false
  - edit.mdx:
      route: application/edit
      method: POST
      privileged: true
      short: Edit application
      description: Edit an existing application for users to apply for.
      parameters:
        actioningUser:
          type: string
          info: User initiating the action.
          optional: false
        applicationId:
          type: integer
          info: Unique identifier for a specific application.
          optional: true
        displayName:
          type: string
          info: The display name for the application.
          optional: false
        description:
          type: string
          info: A short blurb of the application.
          optional: false
        displayIcon:
          type: string
          info: The icon to display from FontAwesome.
          optional: false
        requirementsMarkdown:
          type: string
          info: A link to a markdown file that renders the requirements for the role.
          optional: false
        redirectUrl:
          type: string
          info: The external URL to link the user to to complete commence the application process.
          optional: false
        position:
          type: integer
          info: Which position should this application sit on the page
          optional: false
        applicationStatus:
          type: integer
          info: Whether the application is Open or Closed.
          optional: false
  - delete.mdx:
      route: application/delete
      method: POST
      privileged: true
      short: Delete application
      description: Delete an existing application.
      parameters:
        applicationId:
          type: integer
          info: The id of the application to delete.
          optional: false
discord:
  sidebar: Discord
  files:
  - join.mdx:
      route: discord/join
      method: POST
      privileged: true
      short: Log user joining
      description: Log a message to a Discord channel when user joins the Network.
      parameters:
        username:
          type: string
          info: Users IGN.
          optional: false
  - leave.mdx:
      route: discord/leave
      method: POST
      privileged: true
      short: Log user leaving
      description: Log a message to a Discord channel when user leaves the Network.
      parameters:
        username:
          type: string
          info: User IGN.
          optional: false
  - switch.mdx:
      route: discord/switch
      method: POST
      privileged: true
      short: Log server switch
      description: Log a message to a Discord channel when user switches Server.
      parameters:
        username:
          type: string
          info: Users IGN.
          optional: false
        server:
          type: string
          info: Server display name.
          optional: false
  - chat.mdx:
      route: discord/chat
      method: POST
      privileged: true
      short: Log chat
      description: Log a message to a Discord channel when user send a public chat message.
      parameters:
        username:
          type: string
          info: User IGN.
          optional: false
        server:
          type: string
          info: Server display name.
          optional: false
        content:
          type: string
          info: Chat content.
          optional: false
server:
  sidebar: Servers
  files:
  - get.mdx:
      route: server/get
      method: GET
      privileged: false
      short: Get servers
      description: Get a list of all Servers.
      parameters:
        serverId:
          type: integer
          info: The unique id of the Server.
          optional: true
  - create.mdx:
      route: server/create
      method: POST
      privileged: true
      short: Create server
      description: Create a server.
      parameters:
        actioningUser:
          type: string
          info: User initiating the action.
          optional: false
        displayName:
          type: string
          info: Display name for the server.
          optional: false
        serverConnectionAddress:
          type: string
          info: The connection details for the server.
          optional: false
        position:
          type: integer
          info: The display position the server should have.
          optional: false
  - edit.mdx:
      route: server/edit
      method: POST
      privileged: true
      short: Edit server
      description: Edit an existing server.
      parameters:
        actioningUser:
          type: string
          info: User initiating the action.
          optional: false
        serverId:
          type: integer
          info: The ID of the server.
          optional: false
        displayName:
          type: string
          info: Display name for the server.
          optional: false
        serverConnectionAddress:
          type: string
          info: The connection details for the server.
          optional: false
        position:
          type: integer
          info: The display position the server should have.
          optional: false
  - delete.mdx:
      route: server/delete
      method: POST
      privileged: true
      short: Delete server
      description: Delete an existing server.
      parameters:
        actioningUser:
          type: string
          info: User initiating the action.
          optional: false
        serverId:
          type: integer
          info: The ID of the server to delete.
          optional: false
session:
  sidebar: Sessions
  files:
  - create.mdx:
      route: session/create
      method: POST
      privileged: true
      short: Create session
      description: Create a session for user on login.
      parameters:
        uuid:
          type: string
          info: The UUID for the user.
          optional: false
        ipAddress:
          type: string
          info: The IP address of the user.
          optional: false
  - switch.mdx:
      route: session/switch
      method: POST
      privileged: true
      short: Update for server switch
      description: Update session record to indicate change of server.
      parameters:
        uuid:
          type: string
          info: The UUID for the Minecraft user.
          optional: false
        server:
          type: string
          info: The server the user has switched into.
          optional: false
  - destroy.mdx:
      route: session/destroy
      method: POST
      privileged: true
      short: Destroy session
      description: Update session record to indicate end of session and logout.
      parameters:
        uuid:
          type: string
          info: The UUID for the Minecraft user.
          optional: false
user:
  sidebar: User
  files:
  - create.mdx:
      route: user/create
      method: POST
      privileged: true
      short: Create user
      description: Create a new user when joined for the first time.
      parameters:
        uuid:
          type: string
          info: The UUID for the Minecraft user.
          optional: false
        username:
          type: string
          info: The username for the user.
          optional: false
web:
  sidebar: Website
  files:
   - create.mdx:
      route: web/register/create
      method: POST
      privileged: true
      short: Register user
      description: Create a new registration for a user.
      parameters:
        username:
          type: string
          info: User IGN.
          optional: false
        email:
          type: string
          info: Email of the requested user.
          optional: false
        password:
          type: string
          info: Password that user has inserted.
          optional: false
        confirmPassword:
          type: string
          info: The same as password hopefully.
          optional: false
   - login.mdx:
      route: web/login
      method: POST
      privileged: true
      short: Login user
      description: Log a user into the website and initiate their session.
      parameters:
        username:
          type: string
          info: "User IGN of the user to login."
          optional: false
        email:
          type: string
          info: Email of the requested user.
          optional: false
        password:
          type: string
          info: Password that user has inserted.
          optional: false
   - logout.mdx:
      route: web/logout
      method: GET
      privileged: true
      short: Logout user
      description: Logout a user and destroy their session.
  - configuration.mdx:
      route: web/configuration
      method: GET
      privileged: true
      short: Get Configuration
      description: Obtain site configuration for the application.
  - statistics.mdx:
      route: web/statistics
      method: GET
      privileged: true
      short: Get Statistics
      description: Obtain site statistics for the Network.
  - logs.mdx:
      route: web/logs/get
      method: GET
      privileged: true
      short: Get Logs
      description: Obtain all application logs and user-created actions.